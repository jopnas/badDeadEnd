Solar and climatological functions
14-2-2016 by W.M. Crielaard
http://lowlandswarrior.nl/



CONTENTS OF THIS README FILE
----------------------------
   
 * Introduction
 * Requirements
 * Installation and configuration
 * FAQ and troubleshooting
 * Function reference
 
 
 
INTRODUCTION
------------

These functions provide solar and climatological data for ARMA 3.
The variables that can be estimated using these functions, are: 

 VARIABLE										OUTPUT OF
 
 * Air temperature (°C)							llw_fnc_getTemperature
 * Date and time (YYYY-MM-DD hh:mm:ss)			llw_fnc_getDateTime
 * Shadow detection (true/false)				llw_fnc_inShadow
 * Solar Azimuth angle (°)						llw_fnc_getSunAngle
 * Solar Elevation angle (°)					llw_fnc_getSunAngle
 * Solar Elevation angle at 12:00AM (°)			llw_fnc_getSunElevationNoon
 * Solar Radiation energy (W/m²)				llw_fnc_getSunRadiation
 * Sunrise time (hours)							llw_fnc_getSunRise
 * Sunset time (hours)							llw_fnc_getSunRise
 * Sea temperature (°C)							llw_fnc_getTemperature


 Summary of functions in this file:
 
 * llw_fnc_getDateTime - TEXT:
	current date and time as "YYYY-MM-DD (hh:mm:ss)"
 
 * llw_fnc_getSunAngle - ARRAY:
	(0) Solar Elevation angle and (1) Solar Azimuth angle. Current angles, or angles at a given time and date.

 * llw_fnc_getSunElevationNoon - NUMBER:
	Solar Elevation Angle at 12:00AM

 * llw_fnc_getSunRadiation - NUMBER:
	Solar radiation energy in W/m² at object or position. When a subclass of Man  is referenced, torso is used as reference position.

 * llw_fnc_getSunRise - ARRAY:
	(0) Time at sunrise and (1) time at sunset. For current day or for date provided in parameters.

 * llw_fnc_getTemperature - ARRAY:
	(0) Air temperature and (1) sea temperature in degrees celcius.

 * llw_fnc_inShadow - BOOLEAN:
	returns wheteher an object or position is shielded from the sun. When a subclass of Man  is referenced, torso is used as reference position.



REQUIREMENTS
------------

Require ARMA 3 version 1.54



INSTALLATION AND CONFIGURATION
------------------------------

* Copy the folder “fnc” to your missions folder.

* Use the following to load the functions, e.g. from INIT.SQF:

[] call compile preprocessFile "fnc\loadFunctions.sqf";
   
   
Refer to the Function Reference below, for further instructions.
   

   
TROUBLESHOOTING & FAQ
---------------------

Q: Why does the island texture not match the indicated temperatures? 

A: The scripts base temperatures on Latitude, date, time, and some rough statistical data to model the Air and Sea temperatures. It does not consider landscape textures.


Q: Winter Chernarus (or any other island) shows temperatures above freezing. Why?

A: Winter Chernarus is located close to the equator, and the likelihood of freezing temperatures are close to none.

Q: How can I define my own climate, and disable the built-in temperature model?


A: There are two options:
1) MISSION BUILDERS may use function parameters for llw_fnc_getTemperature to override default values.
2) TERRAIN BUILDERS may use config parameters to override the default values.
   


FUNCTION REFERENCE
------------------


-------------------
llw_fnc_getDateTime
-------------------
Description:
	Function to return formatted text containing current date and time.

Parameter(s): none

Returns:
	TEXT - formatted current date and time as YYYY-MM-DD (HH:MM:SS)

Example:
	_datetxt = [] call llw_fnc_getDateTime

	
	

-------------------
llw_fnc_getSunAngle
-------------------
Description:
Script to calculate solar elevation and azimuth angles at a given time and date

This script ignores the offset generated by Longitude within a timezone.
Based on information from: http://www.pveducation.org/pvcdrom/properties-of-sunlight/elevation-angle
and https://en.wikipedia.org/wiki/Solar_azimuth_angle
		
Parameters (optional):
	0: NUMBER - year
	1: NUMBER - month
	2: NUMBER - day
	3: NUMBER - hours
	4: NUMBER - minutes

Returns:
	ARRAY
		0: NUMBER - solar elevation angle in degrees
		1: NUMBER - solar azimuth angle in degrees

Example:
	_angles = date call llw_fnc_getSunAngle

Alternative to get current solar elevation:
	_angles = call llw_fnc_getSunAngle




---------------------------
llw_fnc_getSunElevationNoon
---------------------------
Description:
	Script to calculate solar elevation at noon (12:00AM)

	Based on information from http://www.pveducation.org/pvcdrom/properties-of-sunlight/elevation-angle

Parameter(s):
	0: NUMBER - year
	1: NUMBER - month
	2: NUMBER - day
	3: NUMBER - hours
	4: NUMBER - minutes

Returns:
	NUMBER - solar elevation angle

Example:
	_maxSolarElevation = date call llw_fnc_getSunElevation

Alternative to get maximum solar elevation for current in-game date:
	_maxSolarElevation = [] call llw_fnc_getSunElevationNoon




-----------------------
llw_fnc_getSunRadiation
-----------------------
Description:
Script to estimate solar radiation energy per m² on an object or position.

	Based on http://www.wrds.uwyo.edu/sco/climateatlas/solar.html
	and https://en.wikipedia.org/wiki/Solar_energy
	and http://rredc.nrel.gov/solar/pubs/bluebook/interp.html
	and https://en.wikipedia.org/wiki/Albedo

Parameter(s):
	0: OBJECT - Object

	When [OBJECT] is used as a parameter, the "body" selection is used as the point of reference

Or:
	PositionASL

Returns:
NUMBER - Solar radiation energy in Watts per square meter (W/m²).

Example:
	_radiation = [player] call llw_fnc_getSunRadiation

Alternative syntax:
	_radiation = getPosASL mycar call llw_fnc_getSunRadiation




------------------
llw_fnc_getSunRise
------------------
Description:
	Calculate time for sunrise and sunset on a given date

	Based on information from http://www.pveducation.org/pvcdrom/properties-of-sunlight/elevation-angle

Parameter(s):
	0: NUMBER - year
	1: NUMBER - month
	2: NUMBER - day
	3: NUMBER - hours (optional)
	4: NUMBER - minutes (optional)

Returns:
	ARRAY [ NUMBER sunrise time, NUMBER sunset time ]

Example:
	_sunrisesunset = date call llw_fnc_getSunrise

Alternative to get sunrise and sunset time for current in-game date:
	_sunrisesunset = [] call llw_fnc_getSunElevationNoon




----------------------
llw_fnc_getTemperature
----------------------
Description:
	Calculate the air and sea temperatures on a given moment
	When no parameters are given, the script will estimate climatological data based on latitude.
	Climatological data in this script was estimated using several sources on the internet.

Based on https://engineering.dartmouth.edu/~d30345d/books/EFM/chap12.pdf and many others via www.google.com

Parameters (optional):
	0: NUMBER - annual average air temperature
	1: NUMBER - seasonal temperature variation; difference between average summer and average winter temperatures
	2: NUMBER - seasonal temperature lag; delay between solstice and min/max temperature levels
	3: NUMBER - diurnal temperature variation; difference between daily min and max temperatures
	4: NUMBER - diurnal temperature lag; fraction of time between noon and sunset unti  maximum temperature is reached; 0 for noon, 1 for sunset (default 0.5)
	5: NUMBER - annual average sea temperature
	6: NUMBER - seasonal sea temperature variation; difference between average summer and average winter temperatures
	7: NUMBER - seasonal sea temperature lag ; delay between solstice and min/max temperature levels
	 
Returns:
	ARRAY
		0: NUMBER - air temperature in degrees Celcius
		1: NUMBER - sea temperature in degrees Celcius

Example, using built-in climatological model:
	_temperatures = [] call llw_fnc_getAirTemperature

Example, using custom climatological parameters:
	_temperatures = [20,7,30,12,0.5,10,2,60] call llw_fnc_getAirTemperature

When available, the script will override the built-in climatological model using data from:
	configFile >> "CfgWorlds" >> worldName >> "climate" 

Code example:

	class climate
	{
		t_air_avg = 17.5;	// annual average air temperature
		stv_air = 7.333333; // seasonal air temperature variation
		stl_air = 30;		// seasonal air temperature lag in days
		dtv_air = 7.333333; // diurnal air temperature variation
		dtl_air = 0.5;		// diurnal air temperature lag as a fraction of time between noon and sunset; 0=max diurnal temperature at noon, 1=max diurnal temperature at sunset
		t_sea_avg = 16;		// annual average sea temperature
		stv_sea = 2; 		// seasonal sea temperature variation
		stl_sea = 60;		// seasonal sea temperature lag in days
	}




----------------
llw_fnc_inShadow
----------------
Description:
	Script to check if a soldier or position is shielded from the sun. Does not consider other light sources.

Parameter(s):
	0: OBJECT - Soldier
	
	When [OBJECT] is used as a parameter, the "body" selection is used as the point of reference

Or:
	PositionASL

Returns:
	BOOL - True is the soldier is shielded from the sun, otherwise false.

Example:
	_inshadows = [player] call llw_fnc_inShadow

Alternative syntax:
	_inshadows = getPosASL bacon call llw_fnc_inShadow
